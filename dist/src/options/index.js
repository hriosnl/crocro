import{b as n}from"../../browser-polyfill.js";class i{constructor(){this.initializeOptions()}async initializeOptions(){await this.loadSettings(),this.attachEventListeners(),console.log("Options page initialized")}async loadSettings(){try{const e=await n.storage.local.get({displayName:"",signalingUrl:"",stunServers:"stun:stun.l.google.com:19302",turnServers:"",turnUsername:"",turnPassword:"",notificationsEnabled:!0,clearOnClose:!1});document.getElementById("display-name").value=e.displayName||"",document.getElementById("signaling-url").value=e.signalingUrl||"",document.getElementById("stun-servers").value=e.stunServers||"",document.getElementById("turn-servers").value=e.turnServers||"",document.getElementById("turn-username").value=e.turnUsername||"",document.getElementById("turn-password").value=e.turnPassword||"",document.getElementById("notifications-enabled").checked=e.notificationsEnabled,document.getElementById("clear-on-close").checked=e.clearOnClose,console.log("Settings loaded:",e)}catch(e){console.error("Failed to load settings:",e),this.showStatusMessage("Failed to load settings","error")}}attachEventListeners(){const e=document.getElementById("save-btn"),s=document.getElementById("reset-btn");e.addEventListener("click",()=>this.saveSettings()),s.addEventListener("click",()=>this.resetSettings()),["display-name","notifications-enabled","clear-on-close"].forEach(a=>{const r=document.getElementById(a);r&&r.addEventListener("change",()=>{clearTimeout(this.autoSaveTimeout),this.autoSaveTimeout=setTimeout(()=>{this.saveSettings(!0)},1e3)})})}async saveSettings(e=!1){try{const s={displayName:document.getElementById("display-name").value.trim(),signalingUrl:document.getElementById("signaling-url").value.trim(),stunServers:document.getElementById("stun-servers").value.trim(),turnServers:document.getElementById("turn-servers").value.trim(),turnUsername:document.getElementById("turn-username").value.trim(),turnPassword:document.getElementById("turn-password").value.trim(),notificationsEnabled:document.getElementById("notifications-enabled").checked,clearOnClose:document.getElementById("clear-on-close").checked},t=this.validateSettings(s);if(!t.valid){this.showStatusMessage(t.error,"error");return}await n.storage.local.set(s),e||this.showStatusMessage("Settings saved successfully!","success"),s.notificationsEnabled&&"Notification"in window&&await Notification.requestPermission()!=="granted"&&console.warn("Notification permission denied"),console.log("Settings saved:",s)}catch(s){console.error("Failed to save settings:",s),this.showStatusMessage("Failed to save settings","error")}}validateSettings(e){if(e.signalingUrl)try{const s=new URL(e.signalingUrl);if(!["ws:","wss:"].includes(s.protocol))return{valid:!1,error:"Signaling URL must use ws:// or wss:// protocol"}}catch{return{valid:!1,error:"Invalid signaling URL format"}}if(e.stunServers){const s=e.stunServers.split(",").map(t=>t.trim());for(const t of s)if(t&&!t.startsWith("stun:"))return{valid:!1,error:'STUN servers must start with "stun:"'}}if(e.turnServers){const s=e.turnServers.split(",").map(t=>t.trim());for(const t of s)if(t&&!t.startsWith("turn:")&&!t.startsWith("turns:"))return{valid:!1,error:'TURN servers must start with "turn:" or "turns:"'}}return e.displayName&&e.displayName.length>50?{valid:!1,error:"Display name must be 50 characters or less"}:{valid:!0}}async resetSettings(){if(confirm("Reset all settings to defaults? This cannot be undone."))try{await n.storage.local.clear(),await this.loadSettings(),this.showStatusMessage("Settings reset to defaults","success"),console.log("Settings reset to defaults")}catch(e){console.error("Failed to reset settings:",e),this.showStatusMessage("Failed to reset settings","error")}}showStatusMessage(e,s="success"){const t=document.getElementById("status-message");t.textContent=e,t.className=`status-message status-${s}`,setTimeout(()=>{t.className="status-message hidden"},3e3)}}document.addEventListener("DOMContentLoaded",()=>{new i});
